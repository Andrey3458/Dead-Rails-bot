
import telebot
from telebot import types
import json
import os

TOKEN = "8034284579:AAFzlNrZcsFVzl_8nlzAmeNgZNK15ADt0Co"
bot = telebot.TeleBot(TOKEN)

DATA_FILE = "users.json"
users = {}

if os.path.exists(DATA_FILE):
    with open(DATA_FILE, "r") as f:
        users = json.load(f)

def save_users():
    with open(DATA_FILE, "w") as f:
        json.dump(users, f)

@bot.message_handler(commands=['start'])
def start(message):
    user_id = str(message.from_user.id)
    if user_id not in users:
        users[user_id] = {"bonds": 0, "invited": []}
        save_users()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", "üõí –ú–∞–≥–∞–∑–∏–Ω –∫–ª–∞—Å—Å–æ–≤")
    markup.add("üìÅ –ü—Ä–æ—Ñ–∏–ª—å", "üì® –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞")
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫")
def daily(message):
    user_id = str(message.from_user.id)
    if user_id not in users:
        users[user_id] = {"bonds": 0, "invited": []}
    users[user_id]["bonds"] += 100
    save_users()
    bot.send_message(message.chat.id, "üéÅ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 100 –æ–±–ª–∏–≥–∞—Ü–∏–π!")

@bot.message_handler(func=lambda m: m.text == "üìÅ –ü—Ä–æ—Ñ–∏–ª—å")
def profile(message):
    user_id = str(message.from_user.id)
    bonds = users.get(user_id, {}).get("bonds", 0)
    invited = users.get(user_id, {}).get("invited", [])
    bot.send_message(message.chat.id, f"üìÅ –ü—Ä–æ—Ñ–∏–ª—å:
–û–±–ª–∏–≥–∞—Ü–∏–∏: {bonds}
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {len(invited)}")

@bot.message_handler(func=lambda m: m.text == "üì® –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞")
def invite(message):
    user_id = str(message.from_user.id)
    link = f"https://t.me/Klassrails_bot?start={user_id}"
    bot.send_message(message.chat.id, f"üì® –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ:
{link}")

@bot.message_handler(func=lambda m: m.text == "üõí –ú–∞–≥–∞–∑–∏–Ω –∫–ª–∞—Å—Å–æ–≤")
def shop(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üëî –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç ‚Äî 2500", callback_data="buy_president"))
    markup.add(types.InlineKeyboardButton("üéØ –û—Ö–æ—Ç–Ω–∏–∫ ‚Äî 3000", callback_data="buy_hunter"))
    markup.add(types.InlineKeyboardButton("üí£ –ü–æ–¥—Ä—ã–≤–Ω–∏–∫ ‚Äî 3000", callback_data="buy_bomber"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("buy_"))
def handle_buy(call):
    user_id = str(call.from_user.id)
    item = call.data.replace("buy_", "")
    prices = {"president": 2500, "hunter": 3000, "bomber": 3000}
    names = {"president": "üëî –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç", "hunter": "üéØ –û—Ö–æ—Ç–Ω–∏–∫", "bomber": "üí£ –ü–æ–¥—Ä—ã–≤–Ω–∏–∫"}

    if user_id not in users:
        users[user_id] = {"bonds": 0, "invited": []}

    if users[user_id]["bonds"] >= prices[item]:
        users[user_id]["bonds"] -= prices[item]
        save_users()
        bot.answer_callback_query(call.id, f"{names[item]} –∫—É–ø–ª–µ–Ω!")
        bot.send_message(user_id, f"{names[item]} –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω —á–µ—Ä–µ–∑ 48 —á–∞—Å–æ–≤.")
    else:
        bot.answer_callback_query(call.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–±–ª–∏–≥–∞—Ü–∏–π!")

bot.polling()
